@use './mixins/screen-gte' as screen-gte;

// The design decision here is that the image should be a square hence one var for height and width
$character-img-size: 224px;

// Abstract/invisible class
%CharacterGrid {
    display: grid;
    grid-gap: 1rem;

    @include screen-gte(735px) {
        grid-template-columns: repeat(2, 1fr);
    }

    @include screen-gte(1200px) {
        grid-template-columns: repeat(5, 1fr);
    }
}

// Character list containing CharacterItems inside
.CharacterList {
    margin: 0 auto;
    @extend %CharacterGrid;

    // Individual Character Items
    &__item {
        margin: 0.4rem;
        cursor: pointer;
        position: relative;
        transition: all ease-in 0.2s;
        background-color: var(--contrast-color);

        &:hover,
        &:active {
            // To make the card slightly 'pop out" on hover to provide some UI feedback
            transform: scale(1.04);
            box-shadow: 0px 0px 8px 2px var(--shadow-color);

            img {
                filter: grayscale(0);
            }
        }

        img {
            width: 100%;
            height: auto;
            filter: grayscale(60%);
            background-color: var(--grey);
            min-width: $character-img-size;
            min-height: $character-img-size;
            transition: filter ease-in 0.2s;
        }

        small {
            display: block;
            margin-bottom: 0.4rem;
        }
    }

    &__info {
        text-align: left;
        padding: 0.8rem 1.2rem;

        p {
            margin: 0;
        }
    }

    // The details of the character
    .Character {
        &__name {
            font-size: 1.4rem;
            text-transform: uppercase;
            margin: 0;
            margin-bottom: 0.8rem;
        }

        &__bio {
            margin: 0;
            margin-bottom: 0.8rem;
        }

        &__status {
            z-index: 1;
            top: 0.4rem;
            left: 0.4rem;
            min-width: 48px;
            font-size: 1.2rem;
            border-radius: 8px;
            position: absolute;
            padding: 0.4rem 0.8rem;
            text-transform: uppercase;
            font-weight: bold;
            box-shadow: 1px 1px 4px 0px var(--shadow-color);

            &.is-alive {
                background-color: var(--accent);
                border: 2px solid var(--accent);
            }
            &.is-dead {
                color: var(--contrast-color);
                background-color: var(--danger);
                border: 2px solid var(--danger);
            }
            &.is-unknown {
                background-color: var(--grey);
                border: 2px solid var(--grey);
            }
        }
    }
}
